name: CI/CD Pipeline with SonarQube

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test-and-analyze:
    name: Test and SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('back/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Backend Tests and Coverage
      - name: Run Backend Tests
        working-directory: ./back
        run: mvn clean verify

      # Frontend Tests and Coverage
      - name: Install Frontend Dependencies
        working-directory: ./front
        run: npm ci

      - name: Run Frontend Tests
        working-directory: ./front
        run: npm run test:coverage

      # Combined SonarQube Analysis
      - name: SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd back
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.sources=src/main/java,../front/src \
            -Dsonar.tests=src/test/java,../front/src \
            -Dsonar.test.inclusions=**/*Test.java,**/*IT.java,**/*.test.js,**/*.spec.js \
            -Dsonar.java.coveragePlugin=jacoco \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.javascript.lcov.reportPaths=../front/coverage/lcov.info \
            -Dsonar.junit.reportPaths=target/surefire-reports

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: test-and-analyze

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Build Backend
        working-directory: ./back
        run: |
          mvn clean compile
          docker build -t bobapp-back .

      - name: Build Frontend
        working-directory: ./front
        run: |
          npm ci
          npm run build
          docker build -t bobapp-front .
