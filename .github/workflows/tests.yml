name: Tests
# This workflow can be more focused than the main CI pipeline.

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Optional: Add a schedule to run tests nightly
  # schedule:
  #   - cron: '0 2 * * *' # Runs at 02:00 AM UTC every day

jobs:
  # JOB: Run Angular Unit Tests
  angular-unit-tests:
    name: Run Angular Unit Tests (Karma)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Updated to v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies (CI)
        run: npm ci
        working-directory: ./front

      - name: Run Angular Unit Tests (Headless)
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage
        working-directory: ./front
        # The --code-coverage flag generates a coverage report

      # Optional: Upload coverage report as an artifact to download later
      - name: Upload coverage report artifact
        if: always() # Uploads the report even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: angular-coverage-report
          path: front/coverage/ # Path where Karma puts the coverage report
          retention-days: 5

  # JOB: Run Backend Unit Tests (Fixed indentation)
  backend-unit-tests:
    name: Run Spring Boot Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Run Backend Tests
        working-directory: ./back
        run: |
          echo "Running Spring Boot unit tests..."
          mvn clean test
          echo "Generating test reports..."
          mvn surefire-report:report

      - name: Generate JaCoCo Coverage Report
        working-directory: ./back
        run: mvn jacoco:report

      - name: Upload Backend Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: |
            back/target/surefire-reports/
            back/target/site/jacoco/
          retention-days: 5

      - name: Publish Test Results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Backend Tests
          path: back/target/surefire-reports/*.xml
          reporter: java-junit

  # JOB: Combine Coverage Reports (Optional but recommended)
  coverage-report:
    name: Generate Combined Coverage Report
    runs-on: ubuntu-latest
    needs: [angular-unit-tests, backend-unit-tests]
    if: always()
    steps:
      - name: Download Angular Coverage
        uses: actions/download-artifact@v4
        with:
          name: angular-coverage-report
          path: ./coverage/frontend/

      - name: Download Backend Coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-test-results
          path: ./coverage/backend/

      - name: Coverage Summary
        run: |
          echo "## 📊 Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Frontend Coverage" >> $GITHUB_STEP_SUMMARY
          if [ -f "./coverage/frontend/lcov-report/index.html" ]; then
            echo "✅ Angular coverage report generated" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Angular coverage report not found" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Backend Coverage" >> $GITHUB_STEP_SUMMARY
          if [ -f "./coverage/backend/target/site/jacoco/index.html" ]; then
            echo "✅ Backend coverage report generated" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Backend coverage report not found" >> $GITHUB_STEP_SUMMARY
          fi
