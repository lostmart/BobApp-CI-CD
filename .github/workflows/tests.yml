name: Tests
# This workflow can be more focused than the main CI pipeline.

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Optional: Add a schedule to run tests nightly
  # schedule:
  #   - cron: '0 2 * * *' # Runs at 02:00 AM UTC every day

jobs:
  # JOB: Run Angular Unit Tests
  angular-unit-tests:
    name: Run Angular Unit Tests (Karma)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies (CI)
        run: npm ci
        working-directory: ./front

      - name: Run Angular Unit Tests (Headless)
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage
        working-directory: ./front
        # The --code-coverage flag generates a coverage report

      # Optional: Upload coverage report as an artifact to download later
      - name: Upload coverage report artifact
        if: always() # Uploads the report even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: angular-coverage-report
          path: front/coverage/ # Path where Karma puts the coverage report
          retention-days: 5

  # JOB: (Example) Run Backend Integration Tests
  # backend-integration-tests:
  #   name: Run Backend Integration Tests
  #   runs-on: ubuntu-latest
  #   needs: angular-unit-tests # Waits for the Angular tests to finish first
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #         cache: 'maven'
  #     - name: Run Integration Tests with Maven
  #       run: mvn verify -Dtest=**/*IntegrationTest.java --file api/pom.xml
  #       # This is an example; you'd need a specific Maven profile or command to run only integration tests.

  # JOB: (Future Placeholder) Run End-to-End Tests with Playwright/Cypress
  # e2e-tests:
  #   name: Run E2E Tests
  #   runs-on: ubuntu-latest
  #   needs: angular-unit-tests # Ensures unit tests pass before running longer E2E tests
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'
  #     - name: Install dependencies
  #       run: npm ci
  #       working-directory: ./front
  #     - name: Install Playwright
  #       run: npx playwright install --with-deps
  #       working-directory: ./front
  #     - name: Run E2E Tests
  #       run: npm run e2e # You would need to create this script first
  #       working-directory: ./front
