name: Continuous Integration (CI)

on: [push, pull_request] # Triggers on push AND pull_request (best practice)

jobs:
  # JOB 1: Build and Test the Java Backend
  build-and-test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin" # Eclipse Temurin is a popular JDK distribution
          cache: "maven" # Caches Maven dependencies to speed up future runs

      - name: Build and Test with Maven
        run: mvn clean verify --file backend/pom.xml
        # 'clean verify' compiles, runs tests, and packages the code.
        # '--file backend/pom.xml' tells Maven where the project is.

  # JOB 2: Build and Test the Angular Frontend
  build-and-test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json # Caches npm dependencies from the frontend dir

      - name: Install dependencies (CI)
        run: npm ci
        working-directory: ./frontend # All subsequent commands in this step will run from /frontend
        # 'npm ci' is faster and more strict than 'npm install', perfect for CI/CD

      - name: Run linting
        run: npm run lint
        working-directory: ./frontend
        # This runs the Angular linter (ng lint) to check code style.

      - name: Run tests (Headless)
        run: npm test -- --watch=false --browsers=ChromeHeadless
        working-directory: ./frontend
        # '--watch=false' runs tests once and exits.
        # '--browsers=ChromeHeadless' runs tests without a GUI, which is necessary on a server.

      - name: Build for production
        run: npm run build -- --configuration production
        working-directory: ./frontend
        # This is the ultimate test: can the project compile for production?
        # The output will be in 'frontend/dist/'
